

エンタープライズ Java アプリケーションを構築する際に必要な検討事項はどのような物がありますか？機能要件、非機能要件を合わせて DDD やモダンな開発プロセスを加えてエンタープライズアーキテクチャの体型をまとめて下さい。まとめた内容は enterprise-architecture.md にまとめて記載して下さい。
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー

使用するフレームワークは Spring ではなく Jakarta EE 10 をベースに書き直して下さい。
そして記載内容に間違いや記入漏れがないかを確認し、enterprise-architecture.md を更新して下さい。

ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
enterprise-architecture.md に記載された、エンタープライズアーキテクチャに基づいてシステムを構築したいと考えています。
今回、スキー用品を販売するショップサイトをマイクロ・サービスとして構築したいと考えています。マイクロサービスは下記から構成したいと考えています。
* API ゲートウェイ機能
* ユーザ管理
* 在庫管理
* 販売管理
* AI 対応のサポート機能
* 支払いカート処理
* OAuth を利用したログイン認証処理
* 製品販売 Web サイト
* クーポン提供機能
* ポイント提供管理機能

全体の仕様書を作成し spec.md ファイルに全体の設計書を記載してください。

ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー

記載内容は下記の 12 点を詳しく記載して下さい。

1. System Overview
2. Architecture Design
3. Microservices Architecture
4. Technology Stack
5. Data Models
6. API Design
7. Authentication & Authorization

* API Design
* Infrastructure Design (Local: Docker, Docker Compose, Production: Azure Container Apps)
* Non-Functional Requirements
* Development & Operations Process
* Migration Strategy
* Risk Management

ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー

enterprise-architecture.md と spec.md に記載される内容に従って各マイクロサービスについてそれぞれ詳細設計書を作成したいと思います。個々のマイクロサービスの設計について詳細に利用するテクノロジーや使用するライブラリとバージョン、API 設計、エラー処理、パラメータ、デバッグ方法、単体テスト方法、検証方法、障害対応方法、デバッグ方法、必要な DB やクラス設計図、UML, DB, MQ など必要な外部サービス連携、API 詳細設計を詳細に作成してください。それぞれのマイクロサービス毎に別のファイルとして Markdown 形式でdesign-docsディレクトリ配下に詳細設計書を作成してください。利用しない技術として Lombock を記載して下さい。詳細設計書は "design-docs" ディレクトリ配下に作成して下さい。仕様書が長くなる場合は一度に書き出すのではなく、段階的に書き進めて下さい。


ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー

design-docs ディレクトリ配下に作成された各マイクロサービスの詳細設計書の内容を確認し、詳細設計書として記載内容に間違いがないか、記入漏れがないかを確認して下さい。
また、enterprise-architecture.md と spec.md に記載された内容に従って、マイクロサービスの詳細設計書が作成されているかを確認して下さい。
01 から 12 まで順番にマイクロサービスの詳細設計書を確認して下さい。
確認した後、追記や修正が必要な場合は、Markdown の構文も併せて修正して下さい。

ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
design-docs ディレクトリ配下に作成された各マイクロサービスはお互いに連携をして動作をするマイクロサービスです。マイクロサービスの原則に従い独立して動作する必要はありますが、サービス間連携も正しく実装する必要があります。各サービスが連携して動作するように、Event ドリブンの仕組みや、CQRS, サガパターンなどを導入して堅牢かつモダンなマイクロサービスとして実装するように仕様書を再度確認し、サービス間連携が正しく動作するように設計書を再度確認し必要に応じて設計書を修正して下さい。

ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー

design-docs ディレクトリ配下の上記のマイクロサービスの詳細設計書の記載内容をもとに上から順番にマイクロサービスを実装していって下さい。

