services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: product-catalog-postgres
    environment:
      POSTGRES_DB: product_catalog
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - catalog-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Product Catalog Service
  product-catalog-service:
    build:
      context: .
      dockerfile: src/main/docker/Dockerfile.jvm
    container_name: product-catalog-service
    environment:
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres:5432/product_catalog
      QUARKUS_DATASOURCE_USERNAME: postgres
      QUARKUS_DATASOURCE_PASSWORD: postgres
      QUARKUS_HTTP_HOST: 0.0.0.0
      QUARKUS_HTTP_PORT: 8083
      QUARKUS_HIBERNATE_ORM_DATABASE_GENERATION: validate
    ports:
      - "8083:8083"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - catalog-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/q/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis (for caching)
  redis:
    image: redis:7-alpine
    container_name: product-catalog-redis
    ports:
      - "6379:6379"
    networks:
      - catalog-network
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  catalog-network:
    driver: bridge
